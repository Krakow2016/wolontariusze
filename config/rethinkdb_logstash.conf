input {
  rethinkdb {
    host => "rethinkdb"
    port => 28015
    auth_key => ""
    watch_dbs => []
    watch_tables => ["sdm.Volunteers", "sdm.Imports"]
    backfill => true
  }
}

filter {
  if [table] == "Volunteers" {
    if ("" in [new_val][password]) {
      mutate {
        add_field => {
          "[new_val][has_password]" => true
        }
      }
    }
    mutate {
      add_field => {
        "id" => "%{[doc][email]}"
        "type" => "volunteer"
        "[suggest][input]" => ["%{[doc][first_name]} %{[doc][last_name]}", "%{[doc][last_name]}"]
        "[suggest][output]" => "%{[doc][first_name]} %{[doc][last_name]}"
        "[suggest][payload][id]" => "%{[doc][id]}"
        "[suggest][payload][profile_picture_url]" => "%{[doc][profile_picture_url]}"
      }
      rename => {
        "new_val" => "[doc]"
      }
      remove_field => ["old_val", "[doc][access_tokens]", "[doc][password]"]
    }
  } else if [table] == "Imports" {
    mutate {
      add_field => {
        "id" => "%{[raw][rg_email]}"
        "type" => "volunteer"
      }
      rename => {
        "new_val" => "[raw]"
      }
      convert => {
        "[raw][cd_need_accomodation]" => "boolean"
        "[raw][cd_team_leader]" => "boolean"
        "[raw][rg_iddocument_scan]" => "boolean"
        "[raw][rg_iddocument_visa]" => "boolean"
        "[raw][rg_picture]" => "boolean"
      }
      split => {
        "[raw][sk_skills]" => "|"
        "[raw][cd_sectors]" => "|"
      }
    }
    date {
      match => [ "[raw][createddate]", "d/M/Y" ]
      target => "@timestamp"
      timezone => "Europe/London"
    }
    date {
      match => [ "[raw][updateddate]", "d/M/Y" ]
      target => "[raw][updateddate]"
      timezone => "Europe/London"
    }
    date {
      match => [ "[raw][rg_birthdate]", "d/M/Y" ]
      target => "[raw][rg_birthdate]"
      timezone => "Europe/London"
    }
    date {
      match => [ "[raw][rg_iddocument_expdate]", "d/M/Y" ]
      target => "[raw][rg_iddocument_expdate]"
      timezone => "Europe/London"
    }
  }
}

output {
  stdout {codec => dots}
  elasticsearch {
    hosts => "es"
    index => "sdm"
    document_id => "%{[id]}"
    doc_as_upsert => true
    action => "update"
  }
}
