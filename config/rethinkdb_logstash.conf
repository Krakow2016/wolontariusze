input {
  rethinkdb {
    host => "rethinkdb"
    port => 28015
    auth_key => ""
    watch_dbs => []
    watch_tables => ["sdm.Volunteers", "sdm.Imports", "sdm.Activities", "sdm.Joints"]
    backfill => true
  }
}

filter {
  if [table] == "Volunteers" {
    if ("" in [new_val][password]) {
      mutate {
        add_field => {
          "[new_val][has_password]" => true
          "[suggest][input]" => ["%{[new_val][first_name]} %{[new_val][last_name]}", "%{[new_val][last_name]}"]
          "[suggest][output]" => "%{[new_val][first_name]} %{[new_val][last_name]}"
          "[suggest][payload][id]" => "%{[new_val][id]}"
          "[suggest][payload][thumb_picture_url]" => "%{[new_val][thumb_picture_url]}"
        }
      }
      ruby {
        code => "event['suggest']['weight'] = event['new_val']['is_admin'] ? '2' : '1'"
      }
    }
    mutate {
      add_field => {
        "id" => "%{[doc][email]}"
        "type" => "volunteer"
      }
      rename => {
        "new_val" => "[doc]"
      }
      remove_field => ["old_val", "[doc][access_tokens]", "[doc][password]"]
    }
  } else if [table] == "Imports" {
    mutate {
      add_field => {
        "id" => "%{[raw][rg_email]}"
        "type" => "volunteer"
      }
      rename => {
        "new_val" => "[raw]"
      }
      convert => {
        "[raw][cd_need_accomodation]" => "boolean"
        "[raw][cd_team_leader]" => "boolean"
        "[raw][rg_iddocument_scan]" => "boolean"
        "[raw][rg_iddocument_visa]" => "boolean"
        "[raw][rg_picture]" => "boolean"
      }
      split => {
        "[raw][sk_skills]" => "|"
        "[raw][cd_sectors]" => "|"
      }
      lowercase => "[raw][od_languages]"
    }

    mutate {
      gsub => [
        "[raw][od_languages]", "(znajomosc podstawowa)|(conoscenza di base)|(conocimiento basico)|(connaissance de base)", "basic",
        "[raw][od_languages]", "(znajomosc dobra)|(buona conoscenza)|(buen conocimiento)|(bonne connaissance)", "good",
        "[raw][od_languages]", "(znajomosc bardzo dobra)|(ottima conoscenza)|(optimo conocimiento)|(tres bonne connaissance)", "excellent",
        "[raw][od_languages]", "(tlumacz zawodowy)|(interprete professionale)|(interprete profesional)|(interprete professionnel)", "professional translator, interpreter",

        "[raw][od_languages]", "(arabski)|(arabo)|(árabe)|(arabe)", "arabic",
        "[raw][od_languages]", "(azerski)|(azero)|(azerí)|(azéri)", "azerbaijani",
        "[raw][od_languages]", "(bialoruski)|(bielorusso)|(bielorruso)|(biélorusse)", "belarusian",
        "[raw][od_languages]", "(bulgarski)|(bulgaro)|(búlgaro)|(bulgare)", "bulgarian",
        "[raw][od_languages]", "(bengalski)|(bengalese)|(bengalí)|(bengalais)", "bengali",
        "[raw][od_languages]", "(bosniacki)|(bosniaco)|(bosnio)|(bosniaque)", "bosnian",
        "[raw][od_languages]", "(czeski)|(ceco)|(checo)|(tchèque)", "czech",
        "[raw][od_languages]", "(dunski)|(danese)|(danés)|(danois)", "danish",
        "[raw][od_languages]", "(niemiecki)|(tedesco)|(alemán)|(allemand)", "german",
        "[raw][od_languages]", "(grecki)|(greco)|(griego)|(grec)", "greek",
        "[raw][od_languages]", "(angielski)|(inglese)|(inglés)|(anglais)", "english",
        "[raw][od_languages]", "(hiszpanski)|(spagnolo)|(español)|(espagnol)", "spanish",
        "[raw][od_languages]", "(estonski)|(estone)|(estoniano)|(estonien)", "estonian",
        "[raw][od_languages]", "(perski)|(persiano (farsi))|(persa (farsi))|(perse (farsi))", "persian (farsi)",
        "[raw][od_languages]", "(finski)|(finlandese)|(finlandés)|(finlandais)", "finnish",
        "[raw][od_languages]", "(francuski)|(francese)|(francés)|(français)", "french",
        "[raw][od_languages]", "(hebrajski)|(ebraico)|(hebreo)|(hébreu)", "hebrew",
        "[raw][od_languages]", "(hindi)|(hindi)|(hindi)|(hindi)", "hindi",
        "[raw][od_languages]", "(chorwacki)|(croato)|(croata)|(croate)", "croatian",
        "[raw][od_languages]", "(wegierski)|(ungherese)|(húngaro)|(hongrois)", "hungarian",
        "[raw][od_languages]", "(armenski)|(armeno)|(armeno)|(arménien)", "armenian",
        "[raw][od_languages]", "(indonezyjski)|(indonesiano)|(indonesio)|(indonésien)", "indonesian",
        "[raw][od_languages]", "(islandzki)|(islandese)|(islandés)|(islandais)", "icelandic",
        "[raw][od_languages]", "(wloski)|(italiano)|(italiano)|(italien)", "italian",
        "[raw][od_languages]", "(japonski)|(giapponese)|(japonés)|(japonais)", "japanese",
        "[raw][od_languages]", "(gruzinski)|(georgiano)|(georgiano)|(géorgien)", "german",
        "[raw][od_languages]", "(kazachski)|(kazako)|(kazajo)|(kazakh)", "kazakh",
        "[raw][od_languages]", "((kambodzanski) khmerski)|(cambogiano (khmer))|(camboyano (khmer))|(cambodgien (khmer))", "cambodian",
        "[raw][od_languages]", "(koreanski)|(coreano)|(coreano)|(coréen)", "korean",
        "[raw][od_languages]", "(kyrgijski)|(kirghiso)|(kirguís)|(kirghiz)", "kyrgyz",
        "[raw][od_languages]", "(laotanski)|(lao)|(laosiano)|(lao)", "lao",
        "[raw][od_languages]", "(litewski)|(lituano)|(lituano)|(lituanien)", "lithuanian",
        "[raw][od_languages]", "(lotewski)|(lettone)|(letón)|(lettonien)", "latvian",
        "[raw][od_languages]", "(malgaski)|(malgascio)|(malgache)|(malgache)", "malagasy",
        "[raw][od_languages]", "(macedonski)|(macedone)|(macedonio)|(macédonien)", "macedonian",
        "[raw][od_languages]", "(mongolski)|(mongolo)|(mongol)|(mongol)", "mongolian",
        "[raw][od_languages]", "(malezyjski)|(malese)|(malayo)|(malaisien)", "malaysian",
        "[raw][od_languages]", "(maltanski)|(maltese)|(maltés)|(maltais)", "maltese",
        "[raw][od_languages]", "(birmanski)|(birmano)|(birmanés)|(birman)", "burmese",
        "[raw][od_languages]", "(nepalski)|(nepalese)|(nepalí)|(nepalais)", "nepalese",
        "[raw][od_languages]", "(holenderski)|(olandese)|(holandés)|(holandais)", "dutch",
        "[raw][od_languages]", "(norweski)|(norvegese)|(noruego)|(norvégien)", "norwegian",
        "[raw][od_languages]", "(nyanja)|(chichewa (nyanja))|(chichewa (nyanja))|(chichewa (nyanja))", "chichewa (nyanja)",
        "[raw][od_languages]", "(polski)|(polacco)|(polaco)|(polonais)", "polish",
        "[raw][od_languages]", "(portugalski)|(portoghese)|(portugués)|(portugais)", "portuguese",
        "[raw][od_languages]", "(rundi)|(kirundi)|(kirundi)|(kirundi)", "kirundi",
        "[raw][od_languages]", "(rumunski)|(rumeno)|(rumano)|(roumain)", "romanian",
        "[raw][od_languages]", "(rosyjski)|(russo)|(ruso)|(russe)", "russian",
        "[raw][od_languages]", "(kinyarwanda)|(kinyarwanda)|(kinyarwanda)|(kinyarwandais)", "kinyarwanda",
        "[raw][od_languages]", "(serbski)|(serbo)|(serbo)|(serbe)", "serbian",
        "[raw][od_languages]", "(senegalski)|(singalese)|(singalés)|(singalais)", "cingalese",
        "[raw][od_languages]", "(slowacki)|(slovacco)|(eslovaco)|(slovaque)", "slovak",
        "[raw][od_languages]", "(slowenski)|(sloveno)|(esloveno)|(slovène)", "slovenian",
        "[raw][od_languages]", "(samoanski)|(samoano)|(samoano)|(samoan)", "samoan",
        "[raw][od_languages]", "(shona)|(shona)|(shona)|(shona)", "shona",
        "[raw][od_languages]", "(albanski)|(albanese)|(albanés)|(albanais)", "albanian",
        "[raw][od_languages]", "(szwedzki)|(svedese)|(sueco)|(suédois)", "swedish",
        "[raw][od_languages]", "(suahili)|(swahili)|(suahili)|(swahili)", "swahili",
        "[raw][od_languages]", "(tamil)|(tamil)|(tamil)|(tamil)", "tamil",
        "[raw][od_languages]", "(tadzycki)|(tagico)|(tayiko)|(tadjik)", "tajik",
        "[raw][od_languages]", "(tajlandzki)|(thailandese)|(tailandés)|(thailandais)", "thai",
        "[raw][od_languages]", "(turkmenski)|(turkmeno)|(turcomano)|(turkmène)", "turkmen",
        "[raw][od_languages]", "(filipinski ( tagalog))|(filippino (tagalog))|(filipino (tagalog))|(philippin (tagalog))", "filipino (tagalog)",
        "[raw][od_languages]", "(tongan)|(tongano)|(tongano)|(tonganais)", "tongan",
        "[raw][od_languages]", "(turecki)|(turco)|(turco)|(turc)", "turkish",
        "[raw][od_languages]", "(ukrainski)|(ucraino)|(ucraniano)|(ukrainien)", "ukrainian",
        "[raw][od_languages]", "(urdu)|(urdu)|(urdu)|(ourdou)", "urdu",
        "[raw][od_languages]", "(uzbecki)|(uzbeco)|(uzbeco)|(ouzbek)", "uzbek",
        "[raw][od_languages]", "(wietnamski)|(vietnamita)|(vietnamés)|(vietnamien)", "vietnamese",
        "[raw][od_languages]", "(xhosa)|(xhosa)|(xhosa)|(xhosa)", "xhosa",
        "[raw][od_languages]", "(kantonski)|(cinese cantonese)|(chino cantonés)|(chinois cantonais)", "chinese cantonese",
        "[raw][od_languages]", "(mandarynski)|(cinese mandarino)|(chino mandarín)|(chinois mandarin)", "chinese mandarin",
        "[raw][od_languages]", "(zulu)|(zulu)|(zulú)|(zoulou)", "zulu",
        "[raw][od_languages]", "(inne)|(altro)|(otros)|(autres)", "other"
      ]
    }

    mutate {
      split => {
        "[raw][od_languages]" => "|"
      }
    }

    date {
      match => [ "[raw][createddate]", "d/M/Y" ]
      target => "@timestamp"
      timezone => "Europe/London"
    }

    date {
      match => [ "[raw][updateddate]", "d/M/Y" ]
      target => "[raw][updateddate]"
      timezone => "Europe/London"
    }

    date {
      match => [ "[raw][rg_birthdate]", "d/M/Y" ]
      target => "[raw][rg_birthdate]"
      timezone => "Europe/London"
    }

    date {
      match => [ "[raw][rg_iddocument_expdate]", "d/M/Y" ]
      target => "[raw][rg_iddocument_expdate]"
      timezone => "Europe/London"
    }

  }  else if [table] == "Activities" {

    # Jeżeli istnieje i nie jest prywatne
    if "id" in [new_val] and "is_private" not in [new_val] {
      mutate {
        add_field => {
          "id" => "%{[doc][id]}"
          "type" => "activity"
        }
        rename => {
          "new_val" => "[doc]"
        }
        remove_field => ["old_val"]
      }

      if [new_val][lat_lon] {
        mutate {
          add_field => {
            "[new_val][lon_lat]" => ["%{[new_val][lat_lon][1]}", "%{[new_val][lat_lon][0]}" ]
          }
        }
      }

      ruby {
        code => "blocks = event['doc']['description']['blocks']; event['doc']['description'] = blocks != nil ? blocks.map{|x| x['text']}.join(' ') : ''"
      }

      date {
        match => [ "[doc][created_at][epoch_time]", "UNIX" ]
        target => "[doc][created_at]"
      }

      date {
        match => [ "[doc][updated_at][epoch_time]", "UNIX" ]
        target => "[doc][updated_at]"
      }

      if "datetime" in [doc] {
          date {
            match => [ "[doc][datetime][epoch_time]", "UNIX" ]
            target => "[doc][datetime]"
          }
      }

    # Do usunięcia
    } else {

      mutate {
        add_field => {
          "id" => "%{[old_val][id]}"
          "type" => "activity"
          "remove" => true
        }
      }

    }

  }  else if [table] == "Joints" {
    mutate {
      add_field => {
        "id" => "%{[new_val][activity_id]}"
        "type" => "activity"
      }
    }

    # Powoduje że atrybut is_canceled jest zawsze zdefiniowany
    if "is_canceled" not in [new_val] {
      mutate {
        add_field => {
          "[new_val][is_canceled]" => false
        }
      }
    }
  }
}

output {
  stdout {codec => dots}
  #stdout {codec => rubydebug}

  if [table] == "Joints" {
    elasticsearch {
      hosts => "es"
      index => "sdm"
      document_id => "%{[id]}"
      document_type => "%{[type]}"
      action => "update"
      script => "if(ctx._source.doc.volunteers == null) { ctx._source.doc.volunteers=[] }; if(%{[new_val][is_canceled]} == true) { ctx._source.doc.volunteers.removeElement('%{[new_val][user_id]}') } else { ctx._source.doc.volunteers.push('%{[new_val][user_id]}'); ctx._source.doc.volunteers.unique() }; ctx._source.doc.limit_reached = (ctx._source.doc.limit.toInteger() > 0 ? (ctx._source.doc.limit.toInteger() == ctx._source.doc.volunteers.size()) : false)"
    }
  # Jeżeli usuwamy coś
  } else if [remove] == "true" {
    elasticsearch {
      hosts => "es"
      index => "sdm"
      document_id => "%{[id]}"
      document_type => "%{[type]}"
      action => "delete"
    }
  } else {
    elasticsearch {
      hosts => "es"
      index => "sdm"
      document_id => "%{[id]}"
      document_type => "%{[type]}"
      doc_as_upsert => true
      action => "update"
    }
  }
}
